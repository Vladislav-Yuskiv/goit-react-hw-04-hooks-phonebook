{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FormContacts/FormContacts.module.css","Components/Filter/Filter.js","Components/FormContacts/FormContacts.js","Components/ContactList/ContactList.js","Components/ContactItem/ContactItem.js","App.js","reportWebVitals.js","index.js","Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.module.css"],"names":["module","exports","Filter","title","value","handleChange","className","s","label","type","name","onChange","input","FormContacts","submit","useState","setName","number","setNumber","currentTarget","reset","onSubmit","e","preventDefault","form","required","button","ContactList","children","list","ContactItem","handleBtnDelete","visibleContacts","map","i","id","item","text","onClick","App","contacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","length","JSON","parse","setItem","stringify","normalizedFilter","toLocaleLowerCase","contact","toLowerCase","includes","find","alert","shortid","generate","prev","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9303e613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Pk2TY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__3JaQs\",\"input\":\"FormContacts_input__1UgqC\",\"button\":\"FormContacts_button__3eluc\",\"label\":\"FormContacts_label__2YPVQ\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './Filter.module.css'\n\nfunction Filter ({ title, value, handleChange }){\n        return (\n            <>\n                <h2 className={s.title}>{title}</h2>\n                <label className={s.label}>\n                Find contacts by name \n                <input type=\"text\" value={value} name=\"filter\" onChange={handleChange} className={s.input}></input>\n                </label>\n            </>\n        )\n    }\n\n\nFilter.propTypes = {\n    title: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    handleChange:PropTypes.func.isRequired\n}\nexport default Filter;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './FormContacts.module.css';\n\nfunction FormContacts ({ submit }) {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n    const handleChange = ({currentTarget}) => {\n    const { name, value } = currentTarget;\n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n        case 'number':\n          setNumber(value);\n          break;\n\n        default:\n          return;\n      }\n    \n    }\n \n  const  handleChangeSubmit = (e) => {\n     e.preventDefault();\n     submit({name , number});\n     reset();\n  };\n\n const reset = () => {\n   setName( '');\n   setNumber('');\n  };\n   \n      \n        return (\n        <form onSubmit={handleChangeSubmit} className={s.form}>\n          <label className={ s.label}>\n            Name\n          <input type=\"text\" name=\"name\" required value={name} onChange={handleChange} className={s.input}></input>\n          </label>\n          <label  className={  s.label}>\n            Number\n          <input type=\"tel\" required name=\"number\" value={number} onChange={handleChange} className={s.input}></input>\n          </label>\n          <button type=\"submit\" className={s.button}>Add to card</button>\n        </form>\n        )\n    }\n\nFormContacts.propTypes = {\n    submit: PropTypes.func.isRequired\n}\nexport default FormContacts;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './ContactList.module.css';\n\nfunction ContactList ({children}) {    \n        return (\n            <ul className={s.list}>\n               {children}\n            </ul>\n        )\n    }\nContactList.propTypes = {\n    children: PropTypes.any.isRequired \n}\nexport default ContactList;","import React from \"react\";\nimport s from './ContactItem.module.css';\nimport PropTypes, { object } from \"prop-types\";\nfunction ContactItem ( { handleBtnDelete ,visibleContacts}) {\n        return (\n             <>\n        {visibleContacts.map(({ id, name, number }, i) => (\n          <li key={id} className={s.item}>\n            <span className={s.text}>\n              {`${i + 1})    `}\n              {name}: {number}\n            </span>\n            <button type=\"button\" onClick={() => handleBtnDelete(id)} className={s.button}>\n              Delete\n            </button>\n          </li>\n        ))}\n        </>\n    )\n        \n    }\n\nContactItem.propTypes = {\n  handleBtnDelete: PropTypes.func.isRequired,\n  visibleContacts: PropTypes.arrayOf(object).isRequired\n}\nexport default ContactItem;","import React, { useState ,useEffect } from \"react\";\nimport Filter from \"./Components/Filter\";\nimport shortid from 'shortid';\nimport FormContacts from \"./Components/FormContacts\";\nimport ContactList from \"./Components/ContactList\";\nimport ContactItem from \"./Components/ContactItem\";\n\nfunction App (){\n \n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n    useEffect(() => {\n    if (localStorage.getItem(\"contacts\")?.length > 0) {\n      setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n\n const addContact = ({ name, number }) => {\n     if (contacts.find( contact => contact.name === name)) {\n        return alert(`${name} is already in contacts`)\n     }\n    const contact = {\n       id: shortid.generate(),\n       name,\n       number\n    }\n    \n    setContacts( (prev) => [...prev , contact])\n   \n  }\n\n  const deleteContact = (contactId) => {\n    setContacts( contacts.filter((item) => {\n        return item.id !== contactId;\n       }) )\n  };\n  \n   const changeFilter = ({currentTarget}) => {\n    setFilter( currentTarget.value);\n  }\n  \n     const normalizedFilter = filter.toLocaleLowerCase();\n     const visibleContacts = contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n     \n    return (\n      <>\n        <h1>PHONEBOOK</h1>\n        <FormContacts submit={addContact} />\n        <Filter title={\"Contacts\"} value={filter} handleChange={changeFilter}/>\n        <ContactList >\n           {contacts.length === 0 && <h2>Список ваших контактів пустий</h2>}\n          <ContactItem  handleBtnDelete={deleteContact} visibleContacts={visibleContacts}/>\n        </ContactList>\n       \n      </>\n    )\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2cRaF\",\"label\":\"Filter_label__1_jd9\",\"input\":\"Filter_input__39PHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3awPr\",\"button\":\"ContactItem_button__4UxuN\"};"],"sourceRoot":""}